version: 2
jobs:
  test-node9:
    working_directory: ~/phantomchain/client
    docker:
      - image: circleci/node:9-browsers
    steps:
      - checkout
      - run:
          name: Apt update
          command: sudo sh -c 'echo "deb http://ftp.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list' && sudo apt-get update
      - run:
          name: Install yarn
          command: 'curl -o- -L https://yarnpkg.com/install.sh | bash && export PATH="$HOME/.yarn/bin:$PATH" && yarn config set cache-folder $HOME/.cache/yarn'
      - restore_cache:
          key: client-node9-{{ checksum "yarn.lock" }}-1
      - run:
          name: Install packages
          command: yarn
      - save_cache:
          key: client-node9-{{ checksum "yarn.lock" }}-1
          paths:
            -  ./node_modules
      - run:
          name: Create .phantom/database directory
          command: mkdir -p $HOME/.phantom/database
      - run:
          name: Test
          command: |
            ./node_modules/.bin/cross-env PHANTOM_ENV=test ./node_modules/.bin/jest --detectOpenHandles --runInBand --forceExit | tee test_output.txt
      - run:
          name: Last 1000 lines of test output
          when: on_fail
          command: tail -n 1000 test_output.txt
      - run: # Running lint here but not in test-node10 as lint doesn't need to be done on both
          name: Lint
          command: yarn lint

  test-node10:
    working_directory: ~/phantomchain/client
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - run:
          name: Apt update
          command: sudo sh -c 'echo "deb http://ftp.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list' && sudo apt-get update
      - run:
          name: Install yarn
          command: 'curl -o- -L https://yarnpkg.com/install.sh | bash && export PATH="$HOME/.yarn/bin:$PATH" && yarn config set cache-folder $HOME/.cache/yarn'
      - restore_cache:
          key: client-node10-{{ checksum "yarn.lock" }}-1
      - run:
          name: Install packages
          command: yarn
      - save_cache:
          key: client-node10-{{ checksum "yarn.lock" }}-1
          paths:
            -  ./node_modules
      - run:
          name: Create .phantom/database directory
          command: mkdir -p $HOME/.phantom/database
      - run: # Running --ci --coverage only here because causes "heap out of memory" error on node 9
          name: Test
          command: |
            ./node_modules/.bin/cross-env ./node_modules/.bin/jest --detectOpenHandles --runInBand --forceExit --ci --coverage | tee test_output.txt
      - run:
          name: Last 1000 lines of test output
          when: on_fail
          command: tail -n 1000 test_output.txt
      - run: # See above, so codecov only here, not on node 9
          name: Codecov
          command: ./node_modules/.bin/codecov
      - run: # Running depcheck here but not in test-node9 as depcheck doesn't need to be done on both
          name: Depcheck
          command: yarn depcheck

workflows:
  version: 2
  test_depcheck_lint:
    jobs:
      - test-node9
      - test-node10
